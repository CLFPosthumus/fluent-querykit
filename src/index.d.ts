export default class QueryBuilder {
    private query;
    constructor();
    private addCondition;
    private stringifyValue;
    equals(property: string, value: string | number | boolean): QueryBuilder;
    notEquals(property: string, value: string | number | boolean): QueryBuilder;
    greaterThan(property: string, value: string | number): QueryBuilder;
    lessThan(property: string, value: string | number): QueryBuilder;
    greaterThanOrEqual(property: string, value: string | number): QueryBuilder;
    lessThanOrEqual(property: string, value: string | number): QueryBuilder;
    startsWith(property: string, value: string): QueryBuilder;
    doesNotStartWith(property: string, value: string): QueryBuilder;
    endsWith(property: string, value: string): QueryBuilder;
    doesNotEndWith(property: string, value: string | number): QueryBuilder;
    contains(property: string, value: string): QueryBuilder;
    doesNotContain(property: string, value: string): QueryBuilder;
    soundsLike(property: string, value: string): QueryBuilder;
    doesNotSoundLike(property: string, value: string | number): QueryBuilder;
    has(property: string, value: string): QueryBuilder;
    doesNotHave(property: string, value: string): QueryBuilder;
    in(property: string, values: (string | number)[]): QueryBuilder;
    equalsCaseInsensitive(property: string, value: string | number): QueryBuilder;
    notEqualsCaseInsensitive(property: string, value: string | number): QueryBuilder;
    startsWithCaseInsensitive(property: string, value: string): QueryBuilder;
    doesNotStartWithCaseInsensitive(property: string, value: string): QueryBuilder;
    endsWithCaseInsensitive(property: string, value: string): QueryBuilder;
    doesNotEndWithCaseInsensitive(property: string, value: string): QueryBuilder;
    containsCaseInsensitive(property: string, value: string): QueryBuilder;
    doesNotContainCaseInsensitive(property: string, value: string): QueryBuilder;
    hasCaseInsensitive(property: string, value: string | number): QueryBuilder;
    doesNotHaveCaseInsensitive(property: string, value: string | number): QueryBuilder;
    inCaseInsensitive(property: string, values: (string | number)[]): QueryBuilder;
    and(): this;
    or(): this;
    openParen(): this;
    closeParen(): this;
    countGreaterThan(property: string, value: number): QueryBuilder;
    countLessThan(property: string, value: number): QueryBuilder;
    countGreaterThanOrEqual(property: string, value: number): QueryBuilder;
    countLessThanOrEqual(property: string, value: number): QueryBuilder;
    equalsCaseCount(property: string, value: number): QueryBuilder;
    notEqualsCaseCount(property: string, value: number): QueryBuilder;
    greaterThanCaseCount(property: string, value: number): QueryBuilder;
    lessThanCaseCount(property: string, value: number): QueryBuilder;
    greaterThanOrEqualCaseCount(property: string, value: number): QueryBuilder;
    lessThanOrEqualCaseCount(property: string, value: number): QueryBuilder;
    build(): string;
}
export { QueryBuilder };
